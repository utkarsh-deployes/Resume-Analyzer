/* Tailwind CSS Base & Utilities + Custom Styles
  This file contains all the necessary styles for your index.html page.
*/

/* 1. Tailwind Preflight (A CSS reset for consistency) */
*,
::before,
::after {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: #e5e7eb;
}
::before,
::after {
  --tw-content: '';
}
html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  tab-size: 4;
  font-family: 'Inter', sans-serif;
  font-feature-settings: normal;
}
body {
  margin: 0;
  line-height: inherit;
  font-family: 'Inter', sans-serif;
  background-color: #f8f9fa;
  color: #1f2937; /* Default text color */
}
h1, h2, h3, p {
  margin: 0;
}
button, input, textarea {
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}
button, input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  appearance: button; /* Fixes the linter warning */
  background-color: transparent;
  background-image: none;
}
svg {
  display: block;
  fill: none;
  stroke: currentColor;
  stroke-width: 1.5;
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* 2. Tailwind Utility Classes used in your HTML */
.container { width: 100%; margin-left: auto; margin-right: auto; }
@media (min-width: 640px) { .container { max-width: 640px; } }
@media (min-width: 768px) { .container { max-width: 768px; } }
@media (min-width: 1024px) { .container { max-width: 1024px; } }
@media (min-width: 1280px) { .container { max-width: 1280px; } }
@media (min-width: 1536px) { .container { max-width: 1536px; } }

.mb-10 { margin-bottom: 2.5rem; }
.mb-2 { margin-bottom: .5rem; }
.mb-3 { margin-bottom: .75rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-8 { margin-bottom: 2rem; }
.mr-2 { margin-right: .5rem; }
.mt-1 { margin-top: .25rem; }
.mt-10 { margin-top: 2.5rem; }
.mt-16 { margin-top: 4rem; }
.mt-4 { margin-top: 1rem; }

.block { display: block; }
.inline-block { display: inline-block; }
.flex { display: flex; }
.hidden { display: none; }
.grid { display: grid; }

.h-12 { height: 3rem; }
.w-12 { width: 3rem; }
.w-full { width: 100%; }

.max-w-2xl { max-width: 42rem; }
.max-w-4xl { max-width: 56rem; }

.cursor-not-allowed { cursor: not-allowed; }
.cursor-pointer { cursor: pointer; }

.flex-col { flex-direction: column; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.gap-8 { gap: 2rem; }

.rounded-xl { border-radius: .75rem; }
.rounded-md { border-radius: .375rem; }
.border { border-width: 1px; }
.border-2 { border-width: 2px; }
.border-dashed { border-style: dashed; }
.border-gray-200 { border-color: #e5e7eb; }
.border-gray-300 { border-color: #d1d5db; }
.border-violet-500 { border-color: #8b5cf6; }

.bg-blue-100 { background-color: #dbeafe; }
.bg-gray-100 { background-color: #f3f4f6; }
.bg-gray-50 { background-color: #f9fafb; }
.bg-green-100 { background-color: #d1fae5; }
.bg-violet-100 { background-color: #eef2ff; }

.p-2 { padding: .5rem; }
.p-3 { padding: .75rem; }
.p-4 { padding: 1rem; }
.p-6 { padding: 1.5rem; }
.p-8 { padding: 2rem; }
.py-4 { padding-top: 1rem; padding-bottom: 1rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }

.text-center { text-align: center; }
.font-sans { font-family: 'Inter', sans-serif; }
.text-lg { font-size: 1.125rem; line-height: 1.75rem; }
.text-sm { font-size: .875rem; line-height: 1.25rem; }
.text-xl { font-size: 1.25rem; line-height: 1.75rem; }
.text-2xl { font-size: 1.5rem; line-height: 2rem; }
.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
.font-bold { font-weight: 700; }
.font-semibold { font-weight: 600; }

.text-blue-700 { color: #1d4ed8; }
.text-gray-400 { color: #9ca3af; }
.text-gray-500 { color: #6b7280; }
.text-gray-600 { color: #4b5563; }
.text-gray-700 { color: #374151; }
.text-gray-800 { color: #1f2937; }
.text-gray-900 { color: #111827; }
.text-green-700 { color: #047857; }
.text-violet-600 { color: #7c3aed; }
.text-violet-700 { color: #6d28d9; }
.text-white { color: #ffffff; }

.opacity-75 { opacity: .75; }
.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000); }
.focus\:ring-violet-500:focus { --tw-ring-color: #8b5cf6; }
.focus\:border-violet-500:focus { border-color: #8b5cf6; }
.transition { transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-timing-function: cubic-bezier(.4,0,.2,1); transition-duration:.15s; }
.whitespace-pre-wrap { white-space: pre-wrap; }

@media (min-width: 768px) {
  .md\:p-8 { padding: 2rem; }
  .md\:p-10 { padding: 2.5rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
}

/* 3. Custom Component Styles from your <style> block */
.main-card {
  background-color: white;
  border-radius: 24px;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.05);
  border: 1px solid #e7e5f4;
}
.feature-card {
  background-color: white;
  border-radius: 16px;
  border: 1px solid #e7e5f4;
  transition: all 0.3s ease;
}
.feature-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.08);
}
.drop-zone {
  border: 2px dashed #d1d5db;
  border-radius: 12px;
  transition: all 0.3s ease;
}
.drop-zone.drag-over {
  border-color: #6d28d9;
  background-color: #f5f3ff;
}
.analyze-button {
  background: linear-gradient(90deg, #8b5cf6, #6d28d9);
  transition: all 0.3s ease;
}
.analyze-button:hover {
  box-shadow: 0 6px 20px rgba(109, 40, 217, 0.3);
  transform: translateY(-2px);
}
.loader {
  border: 4px solid #f3f3f3;
  border-top: 4px solid #6d28d9;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  animation: spin 1s linear infinite;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}